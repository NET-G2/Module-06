// <auto-generated />
using System;
using Lesson06.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lesson06.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231104120214_TPC")]
    partial class TPC
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lesson06.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Drinks"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sweets"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fruits"
                        });
                });

            modelBuilder.Entity("Lesson06.Models.Finance.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transactions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Transaction");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Lesson06.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Coca-Cola",
                            Price = 1.5m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Fant",
                            Price = 1.3m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Pepsi",
                            Price = 1.5m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Name = "Sprite",
                            Price = 1.4m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Name = "Snikers",
                            Price = 2m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Name = "Mars",
                            Price = 2.2m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Name = "Twix",
                            Price = 2.3m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Name = "Apple",
                            Price = 3.5m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Name = "Banana",
                            Price = 2m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Name = "Orange",
                            Price = 2.3m
                        });
                });

            modelBuilder.Entity("Lesson06.Models.Finance.Expense", b =>
                {
                    b.HasBaseType("Lesson06.Models.Finance.Transaction");

                    b.HasDiscriminator().HasValue("Expense");
                });

            modelBuilder.Entity("Lesson06.Models.Finance.Income", b =>
                {
                    b.HasBaseType("Lesson06.Models.Finance.Transaction");

                    b.HasDiscriminator().HasValue("Income");
                });

            modelBuilder.Entity("Lesson06.Models.Product", b =>
                {
                    b.HasOne("Lesson06.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Lesson06.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
