// <auto-generated />
using System;
using Lesson07;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lesson07.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("PersonSequence");

            modelBuilder.Entity("Lesson07.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [PersonSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Lesson07.Models.Employee", b =>
                {
                    b.HasBaseType("Lesson07.Models.Person");

                    b.Property<DateTime>("Hiredate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Lesson07.Models.Student", b =>
                {
                    b.HasBaseType("Lesson07.Models.Person");

                    b.Property<decimal>("AverageGrade")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);
                });

            modelBuilder.Entity("Lesson07.Models.Teacher", b =>
                {
                    b.HasBaseType("Lesson07.Models.Person");

                    b.Property<double>("Experience")
                        .HasColumnType("float");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Lesson07.Models.Security", b =>
                {
                    b.HasBaseType("Lesson07.Models.Employee");

                    b.Property<int>("Smena")
                        .HasColumnType("int");

                    b.ToTable("Securities");
                });

            modelBuilder.Entity("Lesson07.Models.FullTimeStudent", b =>
                {
                    b.HasBaseType("Lesson07.Models.Student");

                    b.Property<int>("Smena")
                        .HasColumnType("int");

                    b.ToTable("FullTimeStudents");
                });

            modelBuilder.Entity("Lesson07.Models.PartTimeStudent", b =>
                {
                    b.HasBaseType("Lesson07.Models.Student");

                    b.Property<int>("StudyDays")
                        .HasColumnType("int");

                    b.ToTable("PartTimeStudents");
                });
#pragma warning restore 612, 618
        }
    }
}
